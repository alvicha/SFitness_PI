name: Deploy Symfony API with MySQL and Nginx

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # 1. Clonar el repositorio
      - name: Checkout código
        uses: actions/checkout@v4

      # 3. Iniciar sesión en Docker Hub
      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Construir y subir la imagen de Symfony
      - name: Construir y subir imagen Symfony (PHP)
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-backend:latest -f proyectoBack/docker_pi/php/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/symfony-backend:latest

      # 5. Construir y subir la imagen de Nginx
      - name: Construir y subir imagen Nginx
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest -f proyectoBack/docker_pi/nginx.Dockerfile docker_pi/
          docker push ${{ secrets.DOCKER_USERNAME }}/symfony-nginx:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # 2. Transferir el archivo `compose.yml` al servidor remoto
      - name: Transferir el archivo compose.yml al servidor remoto
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.REMOTE_KEY }}
          source: ${{ github.workspace }}/proyectoBack/compose.yml
          target: ~/deploy/
          strip_components: 3

      - name: Desplegar en servidor remoto
        uses: appleboy/ssh-action@master
        with:
              host: ${{ secrets.REMOTE_HOST }}
              username: ${{ secrets.REMOTE_USER }}
              key: ${{ secrets.REMOTE_KEY }}
              script: |
                  sudo chmod 666 /var/run/docker.sock
                  echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

                  docker-compose -f /home/${{ secrets.REMOTE_USER }}/deploy/compose.yml pull
                  docker-compose -f /home/${{ secrets.REMOTE_USER }}/deploy/compose.yml down
                  docker-compose -f /home/${{ secrets.REMOTE_USER }}/deploy/compose.yml up -d --force-recreate

      - name: Crear la base de datos si no existe y ejecutar migraciones
        uses: appleboy/ssh-action@master
        with:
              host: ${{ secrets.REMOTE_HOST }}
              username: ${{ secrets.REMOTE_USER }}
              key: ${{ secrets.REMOTE_KEY }}
              script: |
                  docker exec symfony_app php bin/console doctrine:database:create --if-not-exists
                  docker exec symfony_app php bin/console doctrine:migrations:migrate --no-interaction
